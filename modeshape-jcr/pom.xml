<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.teiid.modeshape</groupId>
        <artifactId>modeshape-parent</artifactId>
        <version>1.0.2-SNAPSHOT</version>
        <relativePath>../modeshape-parent/pom.xml</relativePath>
    </parent>

    <!-- The groupId and version values are inherited from parent -->
    <artifactId>modeshape-jcr</artifactId>
    <packaging>jar</packaging>
    <name>ModeShape JCR Repository</name>
    <description>ModeShape implementation of the JCR API</description>
    <url>http://www.modeshape.org</url>

    <!--
      Define the dependencies. Note that all version and scopes default to those defined in the dependencyManagement section of the
      parent pom.
    -->
    <dependencies>
        <!-- Public API (beyond JCR 2.0) -->
        <dependency>
            <groupId>org.teiid.modeshape</groupId>
            <artifactId>modeshape-jcr-api</artifactId>
        </dependency>
        <!-- Heap and file-based maps -->
        <dependency>
            <groupId>org.mapdb</groupId>
            <artifactId>mapdb</artifactId>
        </dependency>
        
        <!-- We use a number of libraries to test the JSON and BSON readers and writers -->
        <dependency>
            <groupId>de.undercouch</groupId>
            <artifactId>bson4jackson</artifactId>
        </dependency>
        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
        </dependency>
        
        <!-- Workspace cache -->

        <dependency>
            <groupId>com.github.ben-manes.caffeine</groupId>
            <artifactId>caffeine</artifactId>
        </dependency>

        <!--
        These following are defined as 'provided' in the parent POM, since ModeShape
        has code that is optional if these APIs are available.
        -->
        <dependency>
            <groupId>org.jboss.spec.javax.servlet</groupId>
            <artifactId>jboss-servlet-api_3.1_spec</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.spec.javax.security.jacc</groupId>
            <artifactId>jboss-jacc-api_1.5_spec</artifactId>
        </dependency>

        <!--
            Testing (note the scope)
        -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-library</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.easymock</groupId>
            <artifactId>easymock</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jboss.narayana.jta</groupId>
            <artifactId>narayana-jta</artifactId>
        </dependency>
        <!--
        Logging (require SLF4J API for compiling, but use Log4J and its SLF4J binding for testing)
        -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-log4j12</artifactId>
        </dependency>
        <dependency>
            <groupId>log4j</groupId>
            <artifactId>log4j</artifactId>
            <scope>provided</scope>
        </dependency>
        
        <!--
          Apache JCR API unit tests (for any JCR implementation), which is a subset of the official TCK
        -->
        <!-- <dependency>
            <groupId>org.apache.jackrabbit</groupId>
            <artifactId>jackrabbit-jcr-tests</artifactId>
        </dependency> -->
        <!--
          PicketBox (JAAS implementation used in test cases)
          -->
        <dependency>
            <groupId>org.picketbox</groupId>
            <artifactId>picketbox-bare</artifactId>
        </dependency>

        <!-- Database binary storage -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>
    </dependencies>
    <build>
        <resources>
            <resource>
                <filtering>false</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*</include>
                    <include>**/*</include>
                </includes>
            </resource>
            <!-- Apply the properties set in the POM to the resource files -->
            <resource>
                <filtering>true</filtering>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/repository.properties</include>
                </includes>
            </resource>
        </resources>
        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <includes>
                    <include>**/*</include>
                </includes>
                <excludes>
                    <exclude>config/db/**</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>config/db/**</include>
                </includes>
            </testResource>
        </testResources>        
    </build>
    <profiles>
        <profile>
            <id>exclude-tck-known-issues</id>
            <activation>
                <property>
                    <name>!runAllTck</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <!--Configure SureFire to use the "known issues" variable which causes certain TCK tests to not be reported as failures -->
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <systemProperties>
                                <property>
                                    <name>known.issues</name>
                                    <value>
                                        <!-- 
                                        List each test method that is not passing because of known issues, where the method is
                                        of the form "package#method". One per line. For example:
                                        org.apache.jackrabbit.test.api.ShareableNodeTest#testModifyDescendantAndSave
                                        -->
                                    </value>
                                </property>
                            </systemProperties>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>assembly</id>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-assembly-plugin</artifactId>
                        <configuration>
                            <descriptorRefs>
                                <descriptorRef>module-with-dependencies</descriptorRef>
                            </descriptorRefs>
                            <attach>false</attach>
                            <finalName>${binary.dist.name}</finalName>
                            <appendAssemblyId>false</appendAssemblyId>
                        </configuration>
                        <executions>
                            <execution>
                                <phase>package</phase>
                                <goals>
                                    <goal>single</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
